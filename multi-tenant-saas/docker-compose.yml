version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: multi-tenant-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: multi_tenant_saas
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_MULTIPLE_DATABASES: tenant1,tenant2,tenant3
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-multiple-databases.sh:/docker-entrypoint-initdb.d/init-multiple-databases.sh
    networks:
      - multi-tenant-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: multi-tenant-redis
    restart: unless-stopped
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    networks:
      - multi-tenant-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: multi-tenant-backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/multi_tenant_saas
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      PORT: 3001
    ports:
      - '3001:3001'
    depends_on:
      - postgres
      - redis
    networks:
      - multi-tenant-network
    volumes:
      - .:/app
      - /app/node_modules

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: multi-tenant-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      NEXT_PUBLIC_API_URL: http://localhost:3001
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - multi-tenant-network
    volumes:
      - .:/app
      - /app/node_modules

volumes:
  postgres_data:
  redis_data:

networks:
  multi-tenant-network:
    driver: bridge
